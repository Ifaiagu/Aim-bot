--[[ LocalScript em StarterGui > ScreenGui
Nome do Script: DaviBOT_Hub ]]

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

-- Estados
local aimbotAtivo = false
local autoShootAtivo = false
local espAtivo = false
local teamCheckAtivo = false
local noclipAtivo = false
local infiniteJumpAtivo = false
local fovAtivo = false
local wallCheckAtivo = true
local AimPart = "Head"

local espModoColorido = true
local corPersonalizada = Color3.fromRGB(0, 255, 0)

-- UI Setup
local Window = Rayfield:CreateWindow({
   Name = "DaviBOT",
   LoadingTitle = "AimBOT",
   LoadingSubtitle = "by DAVI",
   ConfigurationSaving = { Enabled = true, FolderName = nil, FileName = "Aura Hub" },
   Discord = { Enabled = true, Invite = "JF2F2RANud", RememberJoins = false },
   KeySystem = false,
   ToggleUIKeybind = "K",
   Theme = "Dark",
})

local AuraHub = Window:CreateTab("Aura Hub", 4483362458)
AuraHub:CreateSection("Funções DaviBOT")

local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Radius = 100
fovCircle.Color = Color3.fromRGB(0, 255, 0)
fovCircle.Thickness = 1
fovCircle.Transparency = 1
fovCircle.Filled = false

local function getClosestPlayer()
    local closest, shortest = nil, math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(AimPart) and (not teamCheckAtivo or player.Team ~= LocalPlayer.Team) then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local pos, onScreen = Camera:WorldToViewportPoint(player.Character[AimPart].Position)
                if onScreen then
                    if wallCheckAtivo then
                        local origin = Camera.CFrame.Position
                        local direction = (player.Character[AimPart].Position - origin)
                        local rayParams = RaycastParams.new()
                        rayParams.FilterType = Enum.RaycastFilterType.Blacklist
                        rayParams.FilterDescendantsInstances = {LocalPlayer.Character}
                        local result = workspace:Raycast(origin, direction, rayParams)
                        if result and result.Instance and not player.Character:IsAncestorOf(result.Instance) then
                            continue
                        end
                    end
                    local dist2d = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)).Magnitude
                    if dist2d < shortest and dist2d <= fovCircle.Radius then
                        shortest = dist2d
                        closest = player
                    end
                end
            end
        end
    end
    return closest
end

RunService.RenderStepped:Connect(function()
    -- Centralizar o círculo do FOV sempre no meio da tela
    fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    fovCircle.Visible = fovAtivo

    if aimbotAtivo then
        local target = getClosestPlayer()
        if target and target.Character and target.Character:FindFirstChild(AimPart) then
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Character[AimPart].Position)
            if autoShootAtivo then
                local focused = UserInputService:GetFocusedTextBox()
                if not focused then
                    -- Simula clique do mouse esquerdo
                    pcall(function()
                        mouse1press()
                        task.wait(0.05)
                        mouse1release()
                    end)
                end
            end
        end
    end
end)

-- Toggles no hub
AuraHub:CreateToggle({
    Name = "Aimbot (Head)",
    CurrentValue = false,
    Callback = function(v) aimbotAtivo = v end
})

AuraHub:CreateToggle({
    Name = "Auto Shoot",
    CurrentValue = false,
    Callback = function(v) autoShootAtivo = v end
})

AuraHub:CreateToggle({
    Name = "FOV Círculo",
    CurrentValue = false,
    Callback = function(v) fovAtivo = v end
})

AuraHub:CreateSlider({
    Name = "Tamanho do FOV",
    Range = {20, 500},
    Increment = 5,
    Suffix = "px",
    CurrentValue = fovCircle.Radius,
    Callback = function(value)
        fovCircle.Radius = value
    end
})

AuraHub:CreateParagraph({
    Title = "DaviBOT HUB",
    Content = "FOV centralizado e Auto Shoot corrigidos."
})
