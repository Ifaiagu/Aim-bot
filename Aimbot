local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local aimAtivo = false
local espAtivo = false
local autoShootAtivo = false
local noclipAtivo = false
local infiniteJumpAtivo = false
local teamCheckAtivo = false
local aimPartSelecionado = "HumanoidRootPart"
local fovTamanho = 100
local corPersonalizada = Color3.fromRGB(0, 255, 0)

local FOVCircle = Drawing.new("Circle")
FOVCircle.Color = corPersonalizada
FOVCircle.Thickness = 2
FOVCircle.Filled = false
FOVCircle.Transparency = 1
FOVCircle.Visible = false
FOVCircle.Radius = fovTamanho

UserInputService.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Keyboard and noclipAtivo then
		for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = false
			end
		end
	end
end)

local Window = Rayfield:CreateWindow({
	Name = "DaviBOT_Hub",
	LoadingTitle = "DaviBOT Hub",
	LoadingSubtitle = "by David",
	ConfigurationSaving = {
		Enabled = false
	},
	Discord = {
		Enabled = false
	},
	KeySystem = false
})

local Tab = Window:CreateTab("Main", 4483362458)

Tab:CreateToggle({
	Name = "Aimbot",
	CurrentValue = false,
	Callback = function(Value) aimAtivo = Value end,
})

Tab:CreateToggle({
	Name = "ESP",
	CurrentValue = false,
	Callback = function(Value) espAtivo = Value end,
})

Tab:CreateToggle({
	Name = "Auto Shoot",
	CurrentValue = false,
	Callback = function(Value) autoShootAtivo = Value end,
})

Tab:CreateToggle({
	Name = "Team Check",
	CurrentValue = false,
	Callback = function(Value) teamCheckAtivo = Value end,
})

Tab:CreateToggle({
	Name = "Noclip",
	CurrentValue = false,
	Callback = function(Value) noclipAtivo = Value end,
})

Tab:CreateToggle({
	Name = "Infinite Jump",
	CurrentValue = false,
	Callback = function(Value)
		infiniteJumpAtivo = Value
	end
})

UserInputService.JumpRequest:Connect(function()
	if infiniteJumpAtivo then
		LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
	end
end)

Tab:CreateDropdown({
	Name = "AimPart",
	Options = {"Head", "HumanoidRootPart"},
	CurrentOption = "HumanoidRootPart",
	Callback = function(Value)
		aimPartSelecionado = Value
	end
})

Tab:CreateSlider({
	Name = "Tamanho do FOV",
	Range = {20, 500},
	Increment = 10,
	Suffix = "px",
	CurrentValue = fovTamanho,
	Callback = function(Value)
		fovTamanho = Value
		FOVCircle.Radius = Value
	end,
})

Tab:CreateColorPicker({
	Name = "Cor do ESP",
	Color = Color3.fromRGB(0, 255, 0),
	Callback = function(color)
		corPersonalizada = color
		FOVCircle.Color = color
	end
})

-- ESP
local function criarESP(player)
	if not player.Character then return end

	local box = Drawing.new("Square")
	box.Thickness = 2
	box.Transparency = 1
	box.Filled = false
	box.Visible = false

	RunService.RenderStepped:Connect(function()
		pcall(function()
			if espAtivo and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
				local pos, onscreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
				if onscreen and player.Character.Humanoid.Health > 0 and (not teamCheckAtivo or player.Team ~= LocalPlayer.Team) then
					local size = 50
					box.Size = Vector2.new(size, size)
					box.Position = Vector2.new(pos.X - size / 2, pos.Y - size / 2)
					box.Color = corPersonalizada
					box.Visible = true
				else
					box.Visible = false
				end
			else
				box.Visible = false
			end
		end)
	end)
end

for _, p in pairs(Players:GetPlayers()) do
	if p ~= LocalPlayer then
		criarESP(p)
	end
end

Players.PlayerAdded:Connect(function(plr)
	plr.CharacterAdded:Connect(function()
		wait(1)
		criarESP(plr)
	end)
end)

-- Função Aimbot
local function getClosestPlayer()
	local closest, dist = nil, fovTamanho
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("Humanoid") and p.Character:FindFirstChild(aimPartSelecionado) then
			if p.Character.Humanoid.Health > 0 and (not teamCheckAtivo or p.Team ~= LocalPlayer.Team) then
				local pos, visible = Camera:WorldToViewportPoint(p.Character[aimPartSelecionado].Position)
				if visible then
					local mag = (Vector2.new(pos.X, pos.Y) - UserInputService:GetMouseLocation()).Magnitude
					local ray = Ray.new(Camera.CFrame.Position, (p.Character[aimPartSelecionado].Position - Camera.CFrame.Position).Unit * 500)
					local partHit = Workspace:FindPartOnRay(ray, LocalPlayer.Character, false, true)
					if mag < dist and (not partHit or partHit:IsDescendantOf(p.Character)) then
						dist = mag
						closest = p
					end
				end
			end
		end
	end
	return closest
end

RunService.RenderStepped:Connect(function()
	FOVCircle.Position = UserInputService:GetMouseLocation()
	FOVCircle.Visible = aimAtivo
	if aimAtivo then
		local target = getClosestPlayer()
		if target then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Character[aimPartSelecionado].Position)
			if autoShootAtivo then
				local vim = game:GetService("VirtualInputManager")
				pcall(function()
					vim:SendMouseButtonEvent(0, 0, 0, true, game, 0)
					wait()
					vim:SendMouseButtonEvent(0, 0, 0, false, game, 0)
				end)
			end
		end
	end
end)
